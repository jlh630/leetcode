{"id":73,"fid":"73","name":"矩阵置零","slug":"set-matrix-zeroes","link":"https://leetcode.cn/problems/set-matrix-zeroes/description/","percent":67.36615287718686,"level":"Medium","category":"algorithms","en_name":"Set Matrix Zeroes","cn_name":"矩阵置零","totalAC":"397.6K","totalSubmit":"589.4K","likes":1084,"dislikes":0,"desc":"<p>给定一个&nbsp;<code><em>m</em> x <em>n</em></code> 的矩阵，如果一个元素为 <strong>0 </strong>，则将其所在行和列的所有元素都设为 <strong>0</strong> 。请使用 <strong><a href=\"http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\" target=\"_blank\">原地</a></strong> 算法<strong>。</strong></p>\n\n<ul>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg\" style=\"width: 450px; height: 169px;\" />\n<pre>\n<strong>输入：</strong>matrix = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>输出：</strong>[[1,0,1],[0,0,0],[1,0,1]]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg\" style=\"width: 450px; height: 137px;\" />\n<pre>\n<strong>输入：</strong>matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n<strong>输出：</strong>[[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[0].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong></p>\n\n<ul>\n\t<li>一个直观的解决方案是使用 &nbsp;<code>O(<em>m</em><em>n</em>)</code>&nbsp;的额外空间，但这并不是一个好的解决方案。</li>\n\t<li>一个简单的改进方案是使用 <code>O(<em>m</em>&nbsp;+&nbsp;<em>n</em>)</code> 的额外空间，但这仍然不是最好的解决方案。</li>\n\t<li>你能想出一个仅使用常量空间的解决方案吗？</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    void setZeroes(vector<vector<int>>& matrix) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public void setZeroes(int[][] matrix) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def setZeroes(self, matrix):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :rtype: None Do not return anything, modify matrix in-place instead.\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def setZeroes(self, matrix: List[List[int]]) -> None:\n        \"\"\"\n        Do not return anything, modify matrix in-place instead.\n        \"\"\""},{"value":"c","text":"C","defaultCode":"void setZeroes(int** matrix, int matrixSize, int* matrixColSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public void SetZeroes(int[][] matrix) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */\nvar setZeroes = function(matrix) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"/**\n Do not return anything, modify matrix in-place instead.\n */\nfunction setZeroes(matrix: number[][]): void {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[][] $matrix\n     * @return NULL\n     */\n    function setZeroes(&$matrix) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func setZeroes(_ matrix: inout [[Int]]) {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun setZeroes(matrix: Array<IntArray>): Unit {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  void setZeroes(List<List<int>> matrix) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func setZeroes(matrix [][]int)  {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} matrix\n# @return {Void} Do not return anything, modify matrix in-place instead.\ndef set_zeroes(matrix)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def setZeroes(matrix: Array[Array[Int]]): Unit = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn set_zeroes(matrix: &mut Vec<Vec<i32>>) {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (set-zeroes matrix)\n  (-> (listof (listof exact-integer?)) void?)\n\n  )"}],"testcase":"[[1,1,1],[1,0,1],[1,1,1]]","testable":true,"templateMeta":{"name":"setZeroes","params":[{"name":"matrix","type":"integer[][]"}],"return":{"type":"void"},"output":{"paramindex":0},"manual":false}}