{"id":172,"fid":"172","name":"阶乘后的零","slug":"factorial-trailing-zeroes","link":"https://leetcode.cn/problems/factorial-trailing-zeroes/description/","percent":50.54602641244042,"level":"Medium","category":"algorithms","en_name":"Factorial Trailing Zeroes","cn_name":"阶乘后的零","totalAC":"208.6K","totalSubmit":"412.5K","likes":845,"dislikes":0,"desc":"<p>给定一个整数 <code>n</code> ，返回 <code>n!</code> 结果中尾随零的数量。</p>\n\n<p>提示&nbsp;<code>n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1</code></p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 3\n<strong>输出：</strong>0\n<strong>解释：</strong>3! = 6 ，不含尾随 0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 5\n<strong>输出：</strong>1\n<strong>解释：</strong>5! = 120 ，有一个尾随 0\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><b>进阶：</b>你可以设计并实现对数时间复杂度的算法来解决此问题吗？</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int trailingZeroes(int n) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int trailingZeroes(int n) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def trailingZeroes(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def trailingZeroes(self, n: int) -> int:"},{"value":"c","text":"C","defaultCode":"int trailingZeroes(int n) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int TrailingZeroes(int n) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {number}\n */\nvar trailingZeroes = function(n) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function trailingZeroes(n: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function trailingZeroes($n) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func trailingZeroes(_ n: Int) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun trailingZeroes(n: Int): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int trailingZeroes(int n) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func trailingZeroes(n int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Integer}\ndef trailing_zeroes(n)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def trailingZeroes(n: Int): Int = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn trailing_zeroes(n: i32) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (trailing-zeroes n)\n  (-> exact-integer? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec trailing_zeroes(N :: integer()) -> integer().\ntrailing_zeroes(N) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec trailing_zeroes(n :: integer) :: integer\n  def trailing_zeroes(n) do\n    \n  end\nend"}],"testcase":"3","testable":true,"templateMeta":{"name":"trailingZeroes","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}