{"id":2000,"fid":"1870","name":"准时到达的列车最小时速","slug":"minimum-speed-to-arrive-on-time","link":"https://leetcode.cn/problems/minimum-speed-to-arrive-on-time/description/","percent":42.40061789481306,"level":"Medium","category":"algorithms","en_name":"Minimum Speed to Arrive on Time","cn_name":"准时到达的列车最小时速","totalAC":"22.3K","totalSubmit":"50.3K","likes":89,"dislikes":0,"desc":"<p>给你一个浮点数 <code>hour</code> ，表示你到达办公室可用的总通勤时间。要到达办公室，你必须按给定次序乘坐 <code>n</code> 趟列车。另给你一个长度为 <code>n</code> 的整数数组 <code>dist</code> ，其中 <code>dist[i]</code> 表示第 <code>i</code> 趟列车的行驶距离（单位是千米）。</p>\n\n<p>每趟列车均只能在整点发车，所以你可能需要在两趟列车之间等待一段时间。</p>\n\n<ul>\n\t<li>例如，第 <code>1</code> 趟列车需要 <code>1.5</code> 小时，那你必须再等待 <code>0.5</code> 小时，搭乘在第 2 小时发车的第 <code>2</code> 趟列车。</li>\n</ul>\n\n<p>返回能满足你准时到达办公室所要求全部列车的<strong> 最小正整数 </strong>时速（单位：千米每小时），如果无法准时到达，则返回 <code>-1</code> 。</p>\n\n<p>生成的测试用例保证答案不超过 <code>10<sup>7</sup></code> ，且 <code>hour</code> 的 <strong>小数点后最多存在两位数字</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>dist = [1,3,2], hour = 6\n<strong>输出：</strong>1\n<strong>解释：</strong>速度为 1 时：\n- 第 1 趟列车运行需要 1/1 = 1 小时。\n- 由于是在整数时间到达，可以立即换乘在第 1 小时发车的列车。第 2 趟列车运行需要 3/1 = 3 小时。\n- 由于是在整数时间到达，可以立即换乘在第 4 小时发车的列车。第 3 趟列车运行需要 2/1 = 2 小时。\n- 你将会恰好在第 6 小时到达。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>dist = [1,3,2], hour = 2.7\n<strong>输出：</strong>3\n<strong>解释：</strong>速度为 3 时：\n- 第 1 趟列车运行需要 1/3 = 0.33333 小时。\n- 由于不是在整数时间到达，故需要等待至第 1 小时才能搭乘列车。第 2 趟列车运行需要 3/3 = 1 小时。\n- 由于是在整数时间到达，可以立即换乘在第 2 小时发车的列车。第 3 趟列车运行需要 2/3 = 0.66667 小时。\n- 你将会在第 2.66667 小时到达。</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>dist = [1,3,2], hour = 1.9\n<strong>输出：</strong>-1\n<strong>解释：</strong>不可能准时到达，因为第 3 趟列车最早是在第 2 小时发车。</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>n == dist.length</code></li>\n\t<li><code>1 <= n <= 10<sup>5</sup></code></li>\n\t<li><code>1 <= dist[i] <= 10<sup>5</sup></code></li>\n\t<li><code>1 <= hour <= 10<sup>9</sup></code></li>\n\t<li><code>hours</code> 中，小数点后最多存在两位数字</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int minSpeedOnTime(vector<int>& dist, double hour) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minSpeedOnTime(int[] dist, double hour) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minSpeedOnTime(self, dist, hour):\n        \"\"\"\n        :type dist: List[int]\n        :type hour: float\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minSpeedOnTime(self, dist: List[int], hour: float) -> int:"},{"value":"c","text":"C","defaultCode":"int minSpeedOnTime(int* dist, int distSize, double hour) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MinSpeedOnTime(int[] dist, double hour) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} dist\n * @param {number} hour\n * @return {number}\n */\nvar minSpeedOnTime = function(dist, hour) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function minSpeedOnTime(dist: number[], hour: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $dist\n     * @param Float $hour\n     * @return Integer\n     */\n    function minSpeedOnTime($dist, $hour) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minSpeedOnTime(_ dist: [Int], _ hour: Double) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minSpeedOnTime(dist: IntArray, hour: Double): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int minSpeedOnTime(List<int> dist, double hour) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func minSpeedOnTime(dist []int, hour float64) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} dist\n# @param {Float} hour\n# @return {Integer}\ndef min_speed_on_time(dist, hour)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minSpeedOnTime(dist: Array[Int], hour: Double): Int = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn min_speed_on_time(dist: Vec<i32>, hour: f64) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (min-speed-on-time dist hour)\n  (-> (listof exact-integer?) flonum? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec min_speed_on_time(Dist :: [integer()], Hour :: float()) -> integer().\nmin_speed_on_time(Dist, Hour) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec min_speed_on_time(dist :: [integer], hour :: float) :: integer\n  def min_speed_on_time(dist, hour) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func minSpeedOnTime(dist: Array<Int64>, hour: Float64): Int64 {\n\n    }\n}"}],"testcase":"[1,3,2]\n6","testable":true,"templateMeta":{"name":"minSpeedOnTime","params":[{"name":"dist","type":"integer[]"},{"type":"double","name":"hour"}],"return":{"type":"integer"}}}