{"id":407,"fid":"407","name":"接雨水 II","slug":"trapping-rain-water-ii","link":"https://leetcode.cn/problems/trapping-rain-water-ii/description/","percent":57.129051233928124,"level":"Hard","category":"algorithms","en_name":"Trapping Rain Water II","cn_name":"接雨水 II","totalAC":"40.8K","totalSubmit":"71.4K","likes":747,"dislikes":0,"desc":"<p>给你一个&nbsp;<code>m x n</code>&nbsp;的矩阵，其中的值均为非负整数，代表二维高度图每个单元的高度，请计算图中形状最多能接多少体积的雨水。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/trap1-3d.jpg\" /></p>\n\n<pre>\n<strong>输入:</strong> heightMap = [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]\n<strong>输出:</strong> 4\n<strong>解释:</strong> 下雨后，雨水将会被上图蓝色的方块中。总的接雨水量为1+2+1=4。\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/trap2-3d.jpg\" /></p>\n\n<pre>\n<strong>输入:</strong> heightMap = [[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]]\n<strong>输出:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>m == heightMap.length</code></li>\n\t<li><code>n == heightMap[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= heightMap[i][j] &lt;= 2 * 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int trapRainWater(vector<vector<int>>& heightMap) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int trapRainWater(int[][] heightMap) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def trapRainWater(self, heightMap):\n        \"\"\"\n        :type heightMap: List[List[int]]\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def trapRainWater(self, heightMap: List[List[int]]) -> int:"},{"value":"c","text":"C","defaultCode":"int trapRainWater(int** heightMap, int heightMapSize, int* heightMapColSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int TrapRainWater(int[][] heightMap) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} heightMap\n * @return {number}\n */\nvar trapRainWater = function(heightMap) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function trapRainWater(heightMap: number[][]): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[][] $heightMap\n     * @return Integer\n     */\n    function trapRainWater($heightMap) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func trapRainWater(_ heightMap: [[Int]]) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun trapRainWater(heightMap: Array<IntArray>): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int trapRainWater(List<List<int>> heightMap) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func trapRainWater(heightMap [][]int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} height_map\n# @return {Integer}\ndef trap_rain_water(height_map)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def trapRainWater(heightMap: Array[Array[Int]]): Int = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn trap_rain_water(height_map: Vec<Vec<i32>>) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (trap-rain-water heightMap)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec trap_rain_water(HeightMap :: [[integer()]]) -> integer().\ntrap_rain_water(HeightMap) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec trap_rain_water(height_map :: [[integer]]) :: integer\n  def trap_rain_water(height_map) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func trapRainWater(heightMap: Array<Array<Int64>>): Int64 {\n\n    }\n}"}],"testcase":"[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]","testable":true,"templateMeta":{"name":"trapRainWater","params":[{"name":"heightMap","type":"integer[][]"}],"return":{"type":"integer"}}}